var vtkSurfaceLICInterface_DCpy = "//VTK::System::Dec\r\n\r\n//=========================================================================\r\n//\r\n//  Program:   Visualization Toolkit\r\n//  Module:    vtkSurfaceLICMapper_DCpy.glsl\r\n//\r\n//  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\r\n//  All rights reserved.\r\n//  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\r\n//\r\n//     This software is distributed WITHOUT ANY WARRANTY; without even\r\n//     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n//     PURPOSE.  See the above copyright notice for more information.\r\n//\r\n//=========================================================================\r\n\r\n// This shader copies fragments and depths to the output buffer\r\n\r\n// the output of this shader\r\n//VTK::Output::Dec\r\n\r\nuniform sampler2D texDepth;     // z values from vertex shader\r\nuniform sampler2D texRGBColors; // final rgb LIC colors\r\n\r\nin vec2 tcoordVC;\r\n\r\nvoid main()\r\n{\r\n  gl_FragDepth = texture2D(texDepth, tcoordVC).x;\r\n  gl_FragData[0] = texture2D(texRGBColors, tcoordVC);\r\n\r\n  // since we render a screen aligned quad\r\n  // we're going to be writing fragments\r\n  // not touched by the original geometry\r\n  // it's critical not to modify those\r\n  // fragments.\r\n  if (gl_FragDepth == 1.0)\r\n    {\r\n    discard;\r\n    }\r\n}\r\n";

export { vtkSurfaceLICInterface_DCpy as v };
