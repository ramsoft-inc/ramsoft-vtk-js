var vtkLineIntegralConvolution2D_LICN = " //VTK::System::Dec\r\n\r\n//=========================================================================\r\n//\r\n//  Program:   Visualization Toolkit\r\n//  Module:    vtkLineIntegralConvolution2D_LICN.glsl\r\n//\r\n//  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\r\n//  All rights reserved.\r\n//  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\r\n//\r\n//     This software is distributed WITHOUT ANY WARRANTY; without even\r\n//     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n//     PURPOSE.  See the above copyright notice for more information.\r\n//\r\n//=========================================================================\r\n\r\n// the output of this shader\r\nlayout(location = 0) out vec4 LICOutput;\r\nlayout(location = 1) out vec4 SeedOutput;\r\n\r\n/**\r\nThis shader finalizes the convolution for the LIC computation\r\napplying the normalization. eg. if box kernel is used the this\r\nis the number of steps taken.\r\n*/\r\n\r\nuniform sampler2D texLIC;\r\n\r\nin vec2 tcoordVC;\r\n\r\nvoid main(void)\r\n{\r\n  vec4 conv = texture2D(texLIC, tcoordVC.st);\r\n  conv.r = conv.r/conv.a;\r\n  // lic => (convolution, mask, 0, 1)\r\n  LICOutput = vec4(conv.rg , 0.0, 1.0);\r\n  SeedOutput = vec4(0.0, 0.0, 0.0, 0.0);\r\n}\r\n";

export { vtkLineIntegralConvolution2D_LICN as v };
