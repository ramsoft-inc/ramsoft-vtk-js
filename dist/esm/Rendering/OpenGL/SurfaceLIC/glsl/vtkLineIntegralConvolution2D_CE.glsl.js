var vtkLineIntegralConvolution2D_CE = "//VTK::System::Dec\r\n\r\n//=========================================================================\r\n//\r\n//  Program:   Visualization Toolkit\r\n//  Module:    vtkLineIntegralConvolution2D_CE.glsl\r\n//\r\n//  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\r\n//  All rights reserved.\r\n//  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\r\n//\r\n//     This software is distributed WITHOUT ANY WARRANTY; without even\r\n//     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\r\n//     PURPOSE.  See the above copyright notice for more information.\r\n//\r\n//=========================================================================\r\n\r\n// gray scale contrast enhance stage implemented via histogram stretching\r\n// if the min and max are tweaked it can generate out-of-range values\r\n// these will be clamped in 0 to 1\r\n\r\n// the output of this shader\r\nlayout(location = 0) out vec4 LICOutput;\r\nlayout(location = 1) out vec4 SeedOutput;\r\n\r\n\r\nuniform sampler2D texLIC;  // most recent lic pass\r\nuniform float uMin;        // min gray scale color value\r\nuniform float uMaxMinDiff; // max-min\r\n\r\nin vec2 tcoordVC;\r\n\r\nvoid main( void )\r\n{\r\n  vec4 lic = texture2D(texLIC, tcoordVC.st);\r\n  if (lic.g!=0.0)\r\n    {\r\n    LICOutput = lic;\r\n    }\r\n  else\r\n    {\r\n    float CElic = clamp((lic.r - uMin)/uMaxMinDiff, 0.0, 1.0);\r\n    LICOutput = vec4(CElic, lic.gb, 1.0);\r\n    }\r\n    SeedOutput = vec4(0.0, 0.0, 0.0, 0.0);\r\n}\r\n";

export { vtkLineIntegralConvolution2D_CE as v };
